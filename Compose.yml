version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3004:3000"
    #
    # volumes:
    #   - .:/usr/src/app
    environment:
      - NODE_ENV=development
      - DB_HOST=${POSTGRES_HOST:-db}
      - DB_USERNAME=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-password}
      - DB_NAME=${POSTGRES_DB:-luizalabsdb}
      - DB_PORT=5432
    command: ["npm", "run", "start"]
    depends_on:
      - db

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8091:8080"
    depends_on:
      - db

  db:
    image: postgres:15
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-luizalabsdb}
    volumes:
      - db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  test:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["npm", "run", "test:unit"]
    environment:
      - NODE_ENV=test
      - TEST_TYPE=unit
      - DB_HOST=${POSTGRES_HOST:-db}
      - DB_USERNAME=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-password}
      - DB_NAME=${POSTGRES_DB_TEST:-luizalabsdb_test}
      - DB_PORT=5432
    depends_on:
      - db_test

  db_test:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB_TEST:-luizalabsdb_test}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  db:
    driver: local
